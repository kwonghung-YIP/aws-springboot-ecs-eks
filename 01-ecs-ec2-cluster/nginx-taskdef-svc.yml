AWSTemplateFormatVersion: '2010-09-09'
Description: >
  Create a Nginx Task and service

Parameters:
  ECSCluster:
    Type: String
    Default: ecs-ec2-cluster

  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: "Use my default VpcId if this parameter is not provided"
    Default: "vpc-0fe6b72cebb18def1"

  ALBARN:
    Description: Application Load Balancer ARN
    Type: String
    Default: arn:aws:elasticloadbalancing:eu-north-1:796973491384:loadbalancer/app/nginx-ecs-svc-alb/247864ebb9f84d35

Mappings:
  RegionConfigMap:
    eu-north-1:
      AZ: [ eu-north-1a, eu-north-1b,eu-north-1c ]
      SubnetId:
        - subnet-01b85b47ea697c1e4
        - subnet-026401f613174203a
        - subnet-081aac5a690b7a1a8

Resources:
  NginxTaskDef:
    #
    # CloudFormation Reference: AWS::ECS::TaskDefinition
    # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html
    #
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: nginx
      ContainerDefinitions:
        - Name: nginx
          #
          # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecs-taskdefinition-containerdefinition.html#cfn-ecs-taskdefinition-containerdefinition-essential
          Image: "nginx:1.27.4"
          Cpu: 256
          Memory: 256
          PortMappings:
            - ContainerPort: 80
              HostPort: 80
              Protocol: tcp
          Essential: "true"
      #
      # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-taskdefinition.html#cfn-ecs-taskdefinition-networkmode
      #
      NetworkMode: awsvpc # bridge|host|awsvpc|none
      #ExecutionRoleArn:
      #TaskRoleArn:
      #Cpu:
      #Memory:
      #IpcMode:
      #PidMode:

  NginxAwsVpcSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Access to the EC2 hosts that run containers
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0 # allow all IP source including codedeploy-agent-service
          IpProtocol: tcp
          FromPort: 80
          ToPort: 80
      VpcId: !Ref VpcId

  NginxService:
    #
    # CloudFormation Reference: AWS::ECS::Service
    # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html
    #
    Type: AWS::ECS::Service
    Properties:
      ServiceName: nginx
      Cluster: !Ref ECSCluster
      TaskDefinition: !Ref NginxTaskDef
      LaunchType: EC2 # EC2|FARGATE|EXTERNAL

      SchedulingStrategy: REPLICA # DAEMON|REPLICA
      DesiredCount: 3
      
      DeploymentController:
        Type: ECS # ECS|CODE_DEPLOY_EXTERNAL

      #
      # This parameter is required for task definitions that use awsvpc network mode
      # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-networkconfiguration
      #
      NetworkConfiguration:
        AwsvpcConfiguration:
          # Could not enable PublicIp for this example(launch mode)
          AssignPublicIp: DISABLED # DISABLED|ENABLED 
          SecurityGroups:
            - !GetAtt NginxAwsVpcSecurityGroup.GroupId
          Subnets:
            - !Select [0, !FindInMap [RegionConfigMap,!Ref "AWS::Region", SubnetId]]
            - !Select [1, !FindInMap [RegionConfigMap,!Ref "AWS::Region", SubnetId]]
            - !Select [2, !FindInMap [RegionConfigMap,!Ref "AWS::Region", SubnetId]]

      LoadBalancers:
        - ContainerName: nginx
          ContainerPort: 80
          TargetGroupArn: !Ref TargetGroup

  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: nginx-ecs-svc-tg
      Port: 80
      Protocol: HTTP
      # because the ECS task definition use awsvpc as the NetworkMode, so TargetType can assign to "ip"
      TargetType: ip # instance|ip|lambda|alb 
      HealthCheckProtocol: HTTP
      HealthCheckPath: /
      VpcId: !Ref VpcId

  Listener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      Port: 80
      Protocol: HTTP
      LoadBalancerArn: !Ref ALBARN
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref TargetGroup